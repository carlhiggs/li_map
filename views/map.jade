extends layout
block content
    img.center(src='/images/loading_spinner.gif')
    #sidebar.sidebar.collapsed
        // Nav tabs
        .sidebar-tabs
            ul(role='tablist')
                li
                    a(href='#home', role='tab')
                        i.fa.fa-home
                  li
                    a(href='#measures', role='tab')
                        i.fa.fa-bar-chart-o
            ul(role='tablist')
                li
                    a(href='#messages', role='tab')
                        i.fa.fa-envelope
        // Tab panes
        .sidebar-content
            #home.sidebar-pane
                h1.sidebar-header Pilot Melbourne Liveability Index
                    span.sidebar-close
                        i.fa.fa-caret-left
                span(style='font-style:italic') A policy relevant composite indicator of urban liveability, based on a socio-ecological model of health and wellbeing.
            #measures.sidebar-pane
                h1.sidebar-header Indicators
                    span.sidebar-close
                        i.fa.fa-caret-left
            #messages.sidebar-pane
                h1.sidebar-header Contact
                    span.sidebar-close
                        i.fa.fa-caret-left
    #map.sidebar-map
    script.
        var myData = !{JSON.stringify(jsonData)};
        // Create variable to hold map element, give initial settings to map
        var map = L.map('map',{ center: [-37.8078244,144.9625175], zoom: 12});
        
        // Add CartoDB.Positron tile layer to map element
        var bmap = 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png'
        var bmap_attrib = '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
        tiles = L.tileLayer(bmap, { attribution: bmap_attrib}).addTo(map);
        
        // control that shows state info on hover
        var info = L.control();
        
        info.onAdd = function (map) {
        	this._div = L.DomUtil.create('div', 'info summarybox');
        	this.update();
        	return this._div;
        };
        
        info.update = function (props) {
        	this._div.innerHTML = '<h4>Pilot Liveability Index (Melbourne, 2011)</h4>' +  (props ?
        		'<table class="g-pop-table" width="260"><col width="0"><col width="230"><col width="30"><tbody><tr><td></td><td><b>SA1: </b>' + props.f1 +'</td><td></td></tr><tr><td></td><td><b>Suburb: </b>' + props.f2 + '</td><td></td></tr><tr><td></td><td><b>LGA: </b>' + props.f3 +'</td><td></td></tr><tr><td></td><td><b></b></td><td></td></tr><tr><td></td><td><b>Indicator</b></td><td align="center"><b>Decile</b></td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f4/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Liveability</i></td><td align="center">' + props.f4 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f5/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Walkability Index</i></td><td align="center">' + props.f5 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f6/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Social infrastructure (/16)</i></td><td align="center">' + props.f6 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f7/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>PT access meets policy (%)</i></td><td align="center">' + props.f7 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f8/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>POS &ge; 1.5Ha within 400m (%)</i></td><td align="center">' + props.f8 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f9/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Air quality (rev. Mesh Block NO&#x2082; ppb.)</i></td><td align="center">' + props.f9 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f10/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Affordable housing (30/40 rule, SA1 %)</i></td><td align="center">' + props.f10 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (props.f11/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Live & work w/in SA3 (SA2 %)</i></td><td align="center">' + props.f11 + '</td></tr></tbody></table>'
        		: 'Hover over a region');
        };
        
        info.addTo(map);
        
        
        // get color depending on population density value
        function getColor(d) {
        	return  d > 9 ? '#081D58':
        			d > 8 ? '#22318D':
        			d > 7 ? '#2455A4':
        			d > 6 ? '#2280B8':
        			d > 5 ? '#34A5C2':
        			d > 4 ? '#61C0C0':
        			d > 3 ? '#99D6B9':
                    d > 2 ? '#D0ECB3':
                    d > 1 ? '#EFF9B5':
                    d > 0 ? '#FFFFD9':
        					'#f7f7f7';
        }

        function style(feature) {
        	return {
        		weight: 1,
        		color: 'white',
        		fillOpacity: 0.7,
        		fillColor: getColor(feature.properties.f4)
        	};
        }
        
        function highlightFeature(e) {
        	var layer = e.target;
        
        	layer.setStyle({
        		weight: 5,
        		color: '#d65454',
        		dashArray: '',
        		fillOpacity: 0.7
        	});
        
        	if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
        		layer.bringToFront();
        	}
        
        	info.update(layer.feature.properties);
        }
        
        var geojson;
        
        function resetHighlight(e) {
        	geojson.resetStyle(e.target);
        	info.update();
        }
        
        function zoomToFeature(e) {
        	map.fitBounds(e.target.getBounds());
        }
        
        function onEachFeature(feature, layer) {
        	layer.on({
        		mouseover: highlightFeature,
        		mouseout: resetHighlight
        		// click: zoomToFeature
        	});  
          layer.bindPopup('<table class="g-pop-table" width="260"><col width="0"><col width="230"><col width="30"><tbody><tr><td></td><td><b>SA1: </b>' + feature.properties.f1 +'</td><td></td></tr><tr><td></td><td><b>Suburb: </b>' + feature.properties.f2 + '</td><td></td></tr><tr><td></td><td><b>LGA: </b>' + feature.properties.f3 +'</td><td></td></tr><tr><td></td><td><b></b></td><td></td></tr><tr><td></td><td><b>Indicator</b></td><td align="center"><b>Decile</b></td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f4/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Liveability</i></td><td align="center">' + feature.properties.f4 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f5/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Walkability Index</i></td><td align="center">' + feature.properties.f5 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f6/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Social infrastructure (/16)</i></td><td align="center">' + feature.properties.f6 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f7/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>PT access meets policy (%)</i></td><td align="center">' + feature.properties.f7 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f8/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>POS &ge; 1.5Ha within 400m (%)</i></td><td align="center">' + feature.properties.f8 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f9/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Air quality (rev. Mesh Block NO&#x2082; ppb.)</i></td><td align="center">' + feature.properties.f9 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f10/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Affordable housing (30/40 rule, SA1 %)</i></td><td align="center">' + feature.properties.f10 + '</td></tr><tr><td style="position: relative;"><div class="g-party-bg" style="width:'+  (feature.properties.f11/10)*230 +'px; height: 100% ; background: #d65454;"></div></td><td><i>Live & work w/in SA3 (SA2 %)</i></td><td align="center">' + feature.properties.f11 + '</td></tr></tbody></table>');
        }
        
        geojson = L.geoJson(myData, {
        	style: style,
        	onEachFeature: onEachFeature
        }).addTo(map);
        
        map.attributionControl.addAttribution('Liveability Index &copy; <a href="http://cur.org.au/research-programs/healthy-liveable-cities-group/">Healthy Liveable Cities Group, RMIT</a>');
        
        var bmap2 = new L.TileLayer(bmap, {minZoom: 0, maxZoom: 13, attribution: bmap_attrib});
        var miniMap = new L.Control.MiniMap(bmap2).addTo(map);    
        
        var legend = L.control({position: 'bottomright'});
        
        legend.onAdd = function (map) {
        	var div = L.DomUtil.create('div', 'info legend'),
        		deciles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                labels = [],
                decile = ['1 (low)', '2','3','4','5','6','7','8','9','10 (high)'];
                labels.push('<table style="table-layout:fixed;"><col width="20"><col width="8"><col width="50"><tr><td></td><td></td><td><b>Decile</b></td>');
            for (var i = 0; i < deciles.length; i++) {
                labels.push('<tr><td style="background:' + getColor(deciles[i]) + '"></td><td></td><td>' + decile[i] + '</td>');
            }
            div.innerHTML = labels.join('</tr>')+ '</tr></table>';
            return div;
        };
        
        legend.addTo(map);
        // add scale bar
        L.control.scale().addTo(map);
        // add full screen toggle
        map.addControl(new L.Control.Fullscreen());
        var sidebar = L.control.sidebar('sidebar').addTo(map);
        // var printer = L.easyPrint({
          // title: 'Download snapshot to png',
         	// tileLayer: tiles,
         	// sizeModes: ['Current', 'A4Landscape', 'A4Portrait'],
         	// filename: 'LiveabilityIndexExport',
         	// exportOnly: true,
         	// hideControlContainer: false
        // }).addTo(map);
        
        // function manualPrint () {
        	// printer.printMap('CurrentSize', 'MyManualPrint')
        // }
        
        // document.onkeyup=function(e){
          // var e = e || window.event; // for IE to cover IEs window event-object
          // if(e.altKey && e.which == 83) {
            // printer.printMap('A4Landscape', 'LiveabilityIndexExport');
            // }
          // }